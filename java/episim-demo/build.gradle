
// build as application, see https://docs.gradle.org/current/userguide/application_plugin.html

description = 'Demo application of the Epidemes modeling components'

dependencies {
  compile project(':epidemes-model')
  
  compile 'io.coala:guice4-coala-adapter:'+rootProject.coalaVersion
  compile 'io.coala:dsol3-coala-adapter:'+rootProject.coalaVersion
  compile 'io.coala:math3-coala-adapter:'+rootProject.coalaVersion
  compile ('io.coala:eve3-coala-adapter:'+rootProject.coalaVersion){
  	exclude group: 'org.eclipse.jetty', module: 'jetty-jndi'
  }
  compile 'org.hsqldb:hsqldb:2.3.4'
  
  testCompile 'net.jodah:concurrentunit:0.4.2'
  testCompile 'junit:junit:4.11'
  testCompile 'org.hamcrest:hamcrest-all:1.3'
  
  runtime files('src/main/dist')
}

apply plugin: 'application'
// mainClassName = 'nl.rivm.cib.episim.geard.Geard2011Scenario'
mainClassName = 'nl.rivm.cib.episim.hesitant.ScenarioConfig'
applicationName = 'epidemes-demo'
applicationDefaultJvmArgs = ["-Xmx3072m","-Xms768m"]
distributions {
    main {
    
    }
}

apply plugin: 'com.bmuschko.docker-java-application'
buildscript {
    repositories { jcenter() }
    dependencies { classpath 'com.bmuschko:gradle-docker-plugin:3.0.3' }
}

docker {
  url = 'http://192.168.99.100:2376'
  certPath = new File(System.properties['user.home'], '.docker/machine/certs')
  // registryCredentials configured in $user.home/.gradle/gradle.properties
  javaApplication {
    baseImage = 'openjdk:8-jdk'
    maintainer = 'Rick van Krevelen "krevelen@gmail.com"'
    ports = [8080]
    tag = 'demo:1.0-SNAP'
  }
}
