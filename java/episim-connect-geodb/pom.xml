<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>nl.rivm.cib</groupId>
		<artifactId>epidemes</artifactId>
		<version>0.1.0-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>
	<artifactId>epidemes-connect-geodb</artifactId>

	<name>${project.artifactId} ${project.version}</name>
	<description>
		Import support for the RIVM Vaccination Acceptance Simulator
		$Id: 02bbfabe359fa912140559578b78598c6c229198 $
	</description>
	<url>http://www.rivm.nl/en/Topics/M/Modelling_infectious_diseases</url>

	<properties>
		<postgresql.version>9.4.1211.jre7</postgresql.version>
		<geotools.version>16.0</geotools.version>
		<shade.version>2.4.3</shade.version>

		<!-- testing JPA -->
		<jta.version>1.1</jta.version>
		<hsqldb.version>2.3.4</hsqldb.version>
		<hikari.version>2.4.7</hikari.version>
		<hibernate.version>5.2.1.Final</hibernate.version>

		<!-- Eclipse JPA activation, see http://stackoverflow.com/a/37604836 -->
		<m2e.jpa.activation>false</m2e.jpa.activation>

	</properties>

	<repositories>
		<repository>
			<name>COALA Public Maven Repository</name>
			<id>coala-public</id>
			<url>https://github.com/krevelen/coala-binder/raw/mvn-repo/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<name>EPIDEMES Public Maven Repository</name>
			<id>epidemes-public</id>
			<url>https://github.com/krevelen/rivm-episim/raw/mvn-repo/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net repository</name>
			<url>http://download.java.net/maven/2</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>osgeo</id>
			<name>Open Source Geospatial Foundation Repository</name>
			<url>http://download.osgeo.org/webdav/geotools/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>io.coala</groupId>
			<artifactId>coala-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>

		<dependency>
			<!-- Java Enterprise eXtension APIs, including JPA 2.1 -->
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- javax.transaction needed BEFORE Hibernate (in Kundera RDBMS) -->
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>${jta.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-shapefile</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-epsg-hsql</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-swing</artifactId>
			<version>${geotools.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- incl. in-memory JDBC database -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-hikaricp</artifactId>
			<version>${hibernate.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>HikariCP-java6</artifactId>
					<groupId>com.zaxxer</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- replaces default Hibernate connection pool (C3P0) -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>${hikari.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${shade.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<!-- <transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>org.geotools.demo.Quickstart</Main-Class>
									</manifestEntries>
								</transformer> -->
								<!-- This bit merges the various GeoTools META-INF/services files -->
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>