<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>nl.rivm.cib</groupId>
	<artifactId>epidemes</artifactId>
	<version>0.2.0</version>
	<packaging>pom</packaging>


	<name>${project.artifactId} ${project.version}</name>
	<url>https://github.com/krevelen/epidemes</url>
	<description> 
		EPIDEMES Simulator
	</description>
	<organization>
		<name>RIVM</name>
		<url>http://www.rivm.nl/en</url>
	</organization>
	<developers>
		<developer>
			<id>krevelvr</id>
			<name>Rick van Krevelen</name>
			<organization>RIVM</organization>
			<roles>
				<role>lead</role>
			</roles>
		</developer>
	</developers>

	<properties>
		<source>1.8</source>
		<encoding>UTF-8</encoding>
		<skipTests>false</skipTests>
		<maven.test.skip>${skipTests}</maven.test.skip>
		<project.build.sourceLevel>${source}</project.build.sourceLevel>
		<project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
		<!-- for JaCoCO java agent, as per http://stackoverflow.com/a/21633345/1418999 -->
		<argLine />

		<coala.version>0.2.1</coala.version>
		<log4j.version>2.8.2</log4j.version>
		<jackson.version>2.8.8</jackson.version>
		<hibernate.version>5.1.0.Final</hibernate.version>
		<wildfly.version>10.1.1.Final</wildfly.version>
		<tomcat.version>8.5.13</tomcat.version>
		<jetty.version>9.3.9.v20160517</jetty.version>
		<httpcomponents.version>4.5.1</httpcomponents.version>

		<!-- test coverage versions -->
		<jacoco-maven-plugin.version>0.7.7.201606060606</jacoco-maven-plugin.version>
		<jacoco.covered-ratio>0.0</jacoco.covered-ratio>

		<!-- set reporting versions (e.g. unit test code coverage) -->
		<maven-project-info-reports-plugin.version>2.9</maven-project-info-reports-plugin.version>
		<maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>

		<!-- set distribution versions -->
		<wagon-ssh.version>1.0-beta-7</wagon-ssh.version>
		<github.global.server>github</github.global.server>
		<github.repository.name>epidemes</github.repository.name>
		<github.repository.branch>mvn-repo</github.repository.branch>
		<github.repository.owner>krevelen</github.repository.owner>
		<github.repository.localid>internal.repo</github.repository.localid>
		<github.repository.tmpdir>${project.basedir}/../epidemes-local</github.repository.tmpdir>
		<site-maven-plugin.version>0.9</site-maven-plugin.version>

		<!-- set dependency versions -->
		<junit.version>4.11</junit.version>
		<hamcrest.version>1.3</hamcrest.version>
		<concurrentunit.version>0.4.2</concurrentunit.version>
		<log4j.version>2.8.2</log4j.version>

		<!-- JSR versions -->
		<javaee-api.version>7.0</javaee-api.version>
		<javax.servlet-api.version>3.1.0</javax.servlet-api.version>
		<javax.ws.rs-api.version>2.0.1</javax.ws.rs-api.version>
		<javax.inject.version>1</javax.inject.version>
		<jta.version>1.1</jta.version>

		<!-- Maven plugin versions for mojo execution -->
		<lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
		<maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
		<maven-source-plugin.version>3.0.0</maven-source-plugin.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<maven-war-plugin.version>2.6</maven-war-plugin.version>
		<maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>
		<!-- maven-jar-plugin may not work in Eclipse Neon, for Luna/Mars.2 try 
			m2e-mavenarchiver from: https://otto.takari.io/content/sites/m2e.extras/m2eclipse-mavenarchiver/0.17.1/N/LATEST/ -->
		<maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
		<maven-assembly-plugin.version>2.6</maven-assembly-plugin.version>
		<maven-shade-plugin.version>2.4.3</maven-shade-plugin.version>
		<exec-maven-plugin.version>1.5.0</exec-maven-plugin.version>
		<build-helper-maven-plugin.version>1.10</build-helper-maven-plugin.version>
		<maven-processor-plugin.version>3.2.0</maven-processor-plugin.version>

		<docker-maven-plugin.version>0.4.13</docker-maven-plugin.version>
		<docker.skip>true</docker.skip>

		<!-- Eclipse JPA activation, see http://stackoverflow.com/a/37604836 -->
		<m2e.jpa.activation>false</m2e.jpa.activation>
	</properties>

	<profiles>
		<!-- see https://www.dontpanicblog.co.uk/2017/02/28/activate-the-maven-docker-plugin/ -->
		<profile>
			<id>enableDocker</id>
			<properties>
				<docker.skip>false</docker.skip>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>
		<!-- Activate on Linux systems. Assume presence of docker.pid file indicates 
			Docker is available -->
		<profile>
			<id>enableDocker-linux</id>
			<properties>
				<docker.skip>false</docker.skip>
			</properties>
			<activation>
				<file>
					<exists>/var/run/docker.pid</exists>
				</file>
			</activation>
		</profile>
		<!-- Activate on Windows 10 systems with native Docker. Check for docker.exe 
			in default install directory -->
		<profile>
			<id>enableDocker-win10</id>
			<properties>
				<docker.skip>false</docker.skip>
			</properties>
			<activation>
				<file>
					<exists>C:\Program Files\Docker\Docker\resources\bin\docker.exe</exists>
				</file>
			</activation>
		</profile>
		<!-- Activate on Windows (Docker Toolbox) systems. Assume presence of DOCKER_HOST 
			indicates Docker is available -->
		<profile>
			<id>enableDocker-toolbox</id>
			<properties>
				<docker.skip>false</docker.skip>
			</properties>
			<activation>
				<property>
					<name>env.DOCKER_HOST</name>
				</property>
			</activation>
		</profile>
		<profile>
			<id>model</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<modules>
				<module>episim-connect-cbs</module>
				<module>episim-connect-geodb</module>
				<module>episim-connect-pienter2</module>
				<module>episim-model</module>
			</modules>
		</profile>
		<profile>
			<id>mas</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<modules>
				<module>episim-persist</module>
				<!-- <module>episim-persist-kundera</module> -->
				<module>episim-api</module>
				<module>episim-mas</module>
				<module>episim-demo</module>
				<module>epidemes-demo-webapp</module>
			</modules>
		</profile>
		<profile>
			<id>gui</id>
			<activation>
				<file>
					<!-- set system property "npm" with any value -->
					<exists>episim-webapp/node*</exists>
				</file>
			</activation>
			<modules>
				<!-- <module>episim-webapp</module> -->
				<!-- <module>episim-dist</module> -->
			</modules>
		</profile>
	</profiles>

	<distributionManagement>
		<downloadUrl>https://github.com/krevelen/epidemes/raw/mvn-repo/</downloadUrl>
		<repository>
			<id>${github.repository.localid}</id>
			<name>Temporary Staging Repository</name>
			<url>file://${github.repository.tmpdir}</url>
		</repository>
	</distributionManagement>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>epidemes-api</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>epidemes-model</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- FIXME: import coala BOM bundle -->
			<dependency>
				<groupId>io.coala</groupId>
				<artifactId>coala-api</artifactId>
				<version>${coala.version}</version>
			</dependency>
			<dependency>
				<groupId>io.coala</groupId>
				<artifactId>coala-api-time</artifactId>
				<version>${coala.version}</version>
			</dependency>
			<dependency>
				<groupId>io.coala</groupId>
				<artifactId>coala-api-enterprise</artifactId>
				<version>${coala.version}</version>
			</dependency>
			<dependency>
				<groupId>io.coala</groupId>
				<artifactId>guice4-coala-adapter</artifactId>
				<version>${coala.version}</version>
			</dependency>
			<dependency>
				<groupId>io.coala</groupId>
				<artifactId>eve3-coala-adapter</artifactId>
				<version>${coala.version}</version>
			</dependency>
			<dependency>
				<groupId>io.coala</groupId>
				<artifactId>dsol3-coala-adapter</artifactId>
				<version>${coala.version}</version>
			</dependency>
			<dependency>
				<groupId>io.coala</groupId>
				<artifactId>math3-coala-adapter</artifactId>
				<version>${coala.version}</version>
			</dependency>

			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>${javaee-api.version}</version>
			</dependency>
			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-web-api</artifactId>
				<version>${javaee-api.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax.servlet-api.version}</version>
			</dependency>
			<dependency>
				<!-- artifactId: jsr311-api=v1; javax.ws.rs-api=JSR-339/v2 -->
				<groupId>javax.ws.rs</groupId>
				<artifactId>javax.ws.rs-api</artifactId>
				<version>${javax.ws.rs-api.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>${javax.inject.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.transaction</groupId>
				<artifactId>jta</artifactId>
				<version>${jta.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>fluent-hc</artifactId>
				<version>${httpcomponents.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpcomponents.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>javax-websocket-server-impl</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-webapp</artifactId>
				<version>${jetty.version}</version>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>
			<dependency>
				<groupId>net.jodah</groupId>
				<artifactId>concurrentunit</artifactId>
				<version>${concurrentunit.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-all</artifactId>
				<version>${hamcrest.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson</groupId>
				<artifactId>jackson-bom</artifactId>
				<version>${jackson.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-bom</artifactId>
				<version>${log4j.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.hibernate.ogm</groupId>
				<artifactId>hibernate-ogm-bom</artifactId>
				<version>${hibernate.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-hikaricp</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.wildfly.bom</groupId>
				<artifactId>wildfly-javaee7</artifactId>
				<version>${wildfly.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-catalina</artifactId>
				<version>${tomcat.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-jdbc</artifactId>
				<version>${tomcat.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-dbcp</artifactId>
				<version>${tomcat.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-servlet-api</artifactId>
				<version>${tomcat.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<extensions>
			<!-- Enabling the use of SFTP, e.g. for artifact deployment -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>${wagon-ssh.version}</version>
			</extension>
		</extensions>

		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${project.build.sourceLevel}</source>
						<target>${project.build.sourceLevel}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<compilerArgument>-Xlint:deprecation</compilerArgument>
						<compilerArgument>-Xlint:unchecked</compilerArgument>
						<verbose>false</verbose>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
				</plugin>
				<!-- generate JPA MetaModel classes and add to class path -->
				<plugin>
					<groupId>org.bsc.maven</groupId>
					<artifactId>maven-processor-plugin</artifactId>
					<version>${maven-processor-plugin.version}</version>
					<configuration>
						<processors>
							<processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>
						</processors>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.hibernate</groupId>
							<artifactId>hibernate-jpamodelgen</artifactId>
							<version>${hibernate.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
					<configuration>
						<altDeploymentRepository>${github.repository.localid}::default::file://${github.repository.tmpdir}</altDeploymentRepository>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>${jetty.version}</version>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.github.github</groupId>
					<artifactId>site-maven-plugin</artifactId>
					<version>${site-maven-plugin.version}</version>
					<configuration>
						<message>Maven artifacts for ${project.version}</message>
						<noJekyll>true</noJekyll> <!-- disable webpage processing -->
						<outputDirectory>${github.repository.tmpdir}</outputDirectory>
						<branch>refs/heads/${github.repository.branch}</branch>
						<includes>
							<include>**/*</include>
						</includes>
						<repositoryName>${github.repository.name}</repositoryName>
						<repositoryOwner>${github.repository.owner}</repositoryOwner>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec-maven-plugin.version}</version>
				</plugin>

				<plugin>
					<!-- Configure the Maven2 Eclipse IDE Integration (m2e) for non-standard 
						plug-in executions during the compile-test-run life-cycles by the IDE -->
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${lifecycle-mapping.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>

								<!-- Configure "org.jacoco:jacoco-maven-plugin:{prepare-agent,report,check}" 
									goal execution in Eclipse IDE -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>jacoco-maven-plugin</artifactId>
										<versionRange>[0.0.0,)</versionRange>
										<goals>
											<goal>prepare-agent</goal>
											<goal>report</goal>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>

								<!-- Configure "org.bsc.maven:maven-processor-plugin:process" goal 
									execution in Eclipse IDE -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.bsc.maven</groupId>
										<artifactId>maven-processor-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>process</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnConfiguration>true</runOnConfiguration>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>

							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>

			<!-- Set Java compiler configuration -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${project.build.sourceLevel}</source>
					<target>${project.build.sourceLevel}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<compilerArguments>
						<!-- <verbose /> <Xlint:deprecation/> <Xlint:-path/> -->
						<Xmaxerrs>1000</Xmaxerrs>
						<Averbose>true</Averbose>
						<Xlint />
					</compilerArguments>
				</configuration>
			</plugin>

			<!-- Set resources configuration <plugin> <groupId>org.apache.maven.plugins</groupId> 
				<artifactId>maven-resources-plugin</artifactId> <configuration> <encoding>${encoding}</encoding> 
				</configuration> </plugin> -->

			<!-- Set testing configuration -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- <skipTests>true</skipTests> -->
					<parallel>methods</parallel>
					<threadCount>1</threadCount>
					<skipTests>${maven.test.skip}</skipTests>
				</configuration>
			</plugin>

			<!-- Attach sources -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- run site-maven-plugin's 'site' target as part of the build's normal 
				'deploy' phase -->
			<!-- <plugin> <groupId>com.github.github</groupId> <artifactId>site-maven-plugin</artifactId> 
				<executions> <execution> <goals> <goal>site</goal> </goals> <phase>deploy</phase> 
				</execution> </executions> </plugin> -->

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>${jacoco.covered-ratio}</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<configuration>
					<failOnError>false</failOnError>
				</configuration>
				<reportSets>
					<reportSet>
						<id>default</id>
						<reports>
							<report>javadoc</report>
							<!-- <report>test-javadoc</report> -->
						</reports>
					</reportSet>
					<reportSet>
						<id>aggregate</id>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>