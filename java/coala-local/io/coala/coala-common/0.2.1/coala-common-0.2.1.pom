<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.coala</groupId>
		<artifactId>coala</artifactId>
		<version>0.2.1</version>
		<relativePath>..</relativePath>
	</parent>

	<artifactId>coala-common</artifactId>

	<name>${project.artifactId} ${project.version}</name>
	<url>http://coala.io/</url>
	<description>
		COALA common utilities
		$Id$
	</description>

	<properties>
		<joda-time.version>2.9.9</joda-time.version>
		<uuid.version>3.4.0</uuid.version>
		<rxjava.version>2.0.8</rxjava.version>
		<owner.version>1.0.9</owner.version>

		<!-- testing -->
		<woodstox.version>5.0.3</woodstox.version>
		<hamcrest.version>1.3</hamcrest.version>
		<javassist.version>3.20.0-GA</javassist.version>
		<jta.version>1.1</jta.version>
		<kundera.version>3.5</kundera.version>
		<hsqldb.version>2.3.4</hsqldb.version>
		<hikari.version>2.4.7</hikari.version>
		<!-- <hibernate.version>4.3.11.Final</hibernate.version> -->

		<!-- Eclipse JPA activation, see http://stackoverflow.com/a/37604836 -->
		<m2e.jpa.activation>false</m2e.jpa.activation>
	</properties>

	<repositories>
		<!-- COALA public Maven repository -->
		<repository>
			<name>COALA Public Maven Repository</name>
			<id>coala-public</id>
			<url>https://github.com/krevelen/coala-binder/raw/mvn-repo/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<!-- Extension API for dependency injection / aspect oriented programming -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
		</dependency>
		<!-- includes JPA -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- javax.transaction needed BEFORE Hibernate (in Kundera RDBMS) -->
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Includes embedded JNDI context factory for unit testing -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-catalina</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Apache Log4j2 logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<!-- Apache Log4j2 sink for SLF4J bridge -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
		</dependency>
		<!-- Apache Log4j2 bridge for JUL (java.util.logging) -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jul</artifactId>
		</dependency>

		<dependency>
			<!-- used for configurable properties injection -->
			<groupId>org.aeonbits.owner</groupId>
			<artifactId>owner-java8</artifactId>
			<version>${owner.version}</version>
		</dependency>

		<!-- UUID (re)implementation that uses MAC-address uniqueness -->
		<dependency>
			<groupId>com.github.stephenc.eaio-uuid</groupId>
			<artifactId>uuid</artifactId>
			<version>${uuid.version}</version>
			<!-- <exclusions> <exclusion> <groupId>org.slf4j</groupId> <artifactId>slf4j-api</artifactId> 
				</exclusion> </exclusions> -->
		</dependency>

		<!-- rxJava push/pull Observable patterns -->
		<dependency>
			<groupId>io.reactivex.rxjava2</groupId>
			<artifactId>rxjava</artifactId>
			<version>${rxjava.version}</version>
		</dependency>
		<dependency>
			<artifactId>joda-time</artifactId>
			<groupId>joda-time</groupId>
			<version>${joda-time.version}</version>
		</dependency>

		<!-- <dependency> <groupId>com.googlecode.gentyref</groupId> <artifactId>gentyref</artifactId> 
			<version>1.2.0</version> <scope>test</scope> </dependency> -->
		<!-- Joda DateTime, Interval, Duration etc. standard implementations -->

		<!-- Jackson JSON <-> Java object mapping for Joda-time objects -->
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
			<exclusions>
				<exclusion>
					<groupId>joda-time</groupId>
					<artifactId>joda-time</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Jackson JSON <-> Java object mapping for YAML formats -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
		</dependency>
		<!-- Jackson JSON <-> Java data types for java.time (JSR-310) API -->
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>

		<!-- <dependency> <groupId>com.fasterxml.woodstox</groupId> <artifactId>woodstox-core</artifactId> 
			<version>${woodstox.version}</version> </dependency> -->

		<!-- Unit testing framework for test-driven development -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- matcher framework for test-driven development -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- incl. in-memory JDBC database -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- JPA provider for RDMBS and No-SQL (Neo4J, Mongo, ...) -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-hikaricp</artifactId>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<artifactId>HikariCP-java6</artifactId>
					<groupId>com.zaxxer</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- replaces default Hibernate connection pool (C3P0) -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>${hikari.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- javassist version conflict ?: Kundera vs. Hibernate 4/5 -->
		<!-- <dependency> <groupId>com.impetus.kundera.client</groupId> <artifactId>kundera-rdbms</artifactId> 
			<version>${kundera.version}</version> <scope>test</scope> <exclusions> <exclusion> 
			<artifactId>javassist</artifactId> <groupId>javassist</groupId> </exclusion> 
			<exclusion> <groupId>org.hibernate</groupId> <artifactId>hibernate-c3p0</artifactId> 
			</exclusion> <exclusion> <groupId>org.hibernate</groupId> <artifactId>hibernate-core</artifactId> 
			</exclusion> <exclusion> <groupId>org.hibernate</groupId> <artifactId>hibernate-validator</artifactId> 
			</exclusion> </exclusions> </dependency> -->
	</dependencies>
</project>
